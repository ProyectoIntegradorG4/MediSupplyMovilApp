name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v5.4.0
      with:
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "major:"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "feat:"
        # A string to determine the format of the version output
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      run: |
        echo "Iniciando Login"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        echo "Fin del Login"
        echo "New version: ${{ steps.version.outputs.version }} !!!!!!!!"

    - name: Build and Test Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
        EXPO_PUBLIC_STAGE: prod
        EXPO_PUBLIC_API_URL: ${{ secrets.EXPO_PUBLIC_API_URL }}
        EXPO_PUBLIC_API_URL_ANDROID: ${{ secrets.EXPO_PUBLIC_API_URL_ANDROID }}
        EXPO_PUBLIC_API_URL_IOS: ${{ secrets.EXPO_PUBLIC_API_URL_IOS }}
      run: |
        # Build without push first to test
        docker buildx build \
          --platform linux/amd64 \
          --build-arg EXPO_PUBLIC_STAGE=$EXPO_PUBLIC_STAGE \
          --build-arg EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL \
          --build-arg EXPO_PUBLIC_API_URL_ANDROID=$EXPO_PUBLIC_API_URL_ANDROID \
          --build-arg EXPO_PUBLIC_API_URL_IOS=$EXPO_PUBLIC_API_URL_IOS \
          --tag juliocesarforero/docker-medisupply:$NEW_VERSION \
          --tag juliocesarforero/docker-medisupply:latest \
          --cache-from type=gha \
          --cache-to type=gha,mode=max \
          --load .
        
        # Test the image locally
        echo "Testing image locally..."
        docker run --rm -d --name test-container -p 8080:80 juliocesarforero/docker-medisupply:$NEW_VERSION
        sleep 10
        curl -f http://localhost:8080/health || exit 1
        docker stop test-container
        
        # Now push the image
        docker buildx build \
          --platform linux/amd64 \
          --build-arg EXPO_PUBLIC_STAGE=$EXPO_PUBLIC_STAGE \
          --build-arg EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL \
          --build-arg EXPO_PUBLIC_API_URL_ANDROID=$EXPO_PUBLIC_API_URL_ANDROID \
          --build-arg EXPO_PUBLIC_API_URL_IOS=$EXPO_PUBLIC_API_URL_IOS \
          --tag juliocesarforero/docker-medisupply:$NEW_VERSION \
          --tag juliocesarforero/docker-medisupply:latest \
          --cache-from type=gha \
          --cache-to type=gha,mode=max \
          --push .

    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
